2025-04-16 02:34:14,244 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 02:34:14,244 - __main__ - INFO - Processing row 1/1
2025-04-16 02:34:14,910 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 02:35:54,369 - __main__ - INFO - API Status Code: 200
2025-04-16 02:42:31,307 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 02:42:31,307 - __main__ - INFO - Processing row 1/1
2025-04-16 02:42:31,779 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 02:44:12,963 - __main__ - INFO - API Status Code: 200
2025-04-16 02:45:40,156 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 02:45:40,156 - __main__ - INFO - Processing row 1/1
2025-04-16 02:45:40,869 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 02:47:20,628 - __main__ - INFO - API Status Code: 200
2025-04-16 02:51:39,575 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 02:51:39,576 - __main__ - INFO - Processing row 1/1
2025-04-16 02:51:40,263 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 02:53:19,176 - __main__ - INFO - API Status Code: 200
2025-04-16 02:53:19,197 - __main__ - ERROR - Error processing CSV single_data.csv: not enough values to unpack (expected 7, got 5)
2025-04-16 03:00:48,719 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:00:48,720 - __main__ - INFO - Processing row 1/1
2025-04-16 03:00:49,167 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:02:29,260 - __main__ - INFO - API Status Code: 200
2025-04-16 03:06:17,367 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:06:17,367 - __main__ - INFO - Processing row 1/1
2025-04-16 03:06:17,893 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:07:56,379 - __main__ - INFO - API Status Code: 200
2025-04-16 03:16:54,510 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:16:54,510 - __main__ - INFO - Processing row 1/1
2025-04-16 03:16:55,196 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:18:35,240 - __main__ - INFO - API Status Code: 200
2025-04-16 03:18:35,264 - __main__ - ERROR - Error processing CSV single_data.csv: 'incident'
2025-04-16 03:21:06,165 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:21:06,166 - __main__ - INFO - Processing row 1/1
2025-04-16 03:21:06,932 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:22:44,950 - __main__ - INFO - API Status Code: 200
2025-04-16 03:22:44,975 - __main__ - ERROR - Error processing CSV single_data.csv: 'incident'
2025-04-16 03:26:04,631 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:26:04,631 - __main__ - INFO - Processing row 1/1
2025-04-16 03:26:05,176 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:27:43,801 - __main__ - INFO - API Status Code: 200
2025-04-16 03:27:43,819 - __main__ - ERROR - Error processing CSV single_data.csv: 'incident'
2025-04-16 03:28:03,440 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:28:03,441 - __main__ - INFO - Processing row 1/1
2025-04-16 03:28:03,949 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:29:44,432 - __main__ - INFO - API Status Code: 200
2025-04-16 03:29:44,461 - __main__ - ERROR - Error processing CSV single_data.csv: 'incident'
2025-04-16 03:31:01,581 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:31:01,581 - __main__ - INFO - Processing row 1/1
2025-04-16 03:31:02,588 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:32:40,877 - __main__ - INFO - API Status Code: 200
2025-04-16 03:32:40,902 - __main__ - ERROR - Error processing CSV single_data.csv: 'incident'
2025-04-16 03:33:14,774 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:33:14,775 - __main__ - INFO - Processing row 1/1
2025-04-16 03:33:15,222 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:34:54,919 - __main__ - INFO - API Status Code: 200
2025-04-16 03:34:54,947 - __main__ - ERROR - Error processing CSV single_data.csv: 'incident'
2025-04-16 03:36:29,646 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:36:29,646 - __main__ - INFO - Processing row 1/1
2025-04-16 03:36:30,124 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:38:10,766 - __main__ - INFO - API Status Code: 200
2025-04-16 03:38:10,813 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,818 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,823 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,827 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,830 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,856 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,859 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,862 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,864 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,868 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,870 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,874 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,877 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,880 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,883 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,889 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,891 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,894 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,896 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,901 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,905 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,907 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,911 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,917 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,920 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,923 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,926 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,930 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,932 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,935 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,937 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,940 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,942 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,946 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,948 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,951 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,953 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,956 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,958 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,961 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,963 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,967 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,969 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,972 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,980 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,982 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,986 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,988 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,991 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,993 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,996 - __main__ - INFO - Found similar record
2025-04-16 03:38:10,999 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,003 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,005 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,008 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,010 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,013 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,015 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,019 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,022 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,025 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,061 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,064 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,072 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,076 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,079 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,082 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,086 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,090 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,093 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,095 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,099 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,102 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,104 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,107 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,109 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,112 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,114 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,119 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,122 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,124 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,127 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,129 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,133 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,135 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,138 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,140 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,144 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,146 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,148 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,150 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,153 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,155 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,158 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,161 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,164 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,166 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,168 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,171 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,173 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,177 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,179 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,183 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,185 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,189 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,192 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,195 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,197 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,201 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,203 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,205 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,208 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,211 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,214 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,217 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,219 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,222 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,224 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,227 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,229 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,234 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,238 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,242 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,244 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,246 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,250 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,252 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,256 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,259 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,261 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,263 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,265 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,268 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,270 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,273 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,275 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,279 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,281 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,285 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,287 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,291 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,297 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,330 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,333 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,339 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,344 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,348 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,350 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,354 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,356 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,359 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,362 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,365 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,367 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,370 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,372 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,376 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,378 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,381 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,383 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,386 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,389 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,392 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,394 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,397 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,399 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,401 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,404 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,406 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,409 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,411 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,414 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,416 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,420 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,422 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,425 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,427 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,430 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,432 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,435 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,437 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,439 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,441 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,444 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,447 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,449 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,452 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,454 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,458 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,461 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,463 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,465 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,468 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,470 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,473 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,475 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,478 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,481 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,484 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,487 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,490 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,493 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,496 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,498 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,501 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,503 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,505 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,507 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,510 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,513 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,515 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,518 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,520 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,524 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,526 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,529 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,531 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,535 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,537 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,539 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,541 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,545 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,547 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,550 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,552 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,555 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,557 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,560 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,562 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,566 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,567 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,571 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,573 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,577 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,580 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,584 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,588 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,593 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,596 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,598 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,601 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,603 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,605 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,609 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,612 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,614 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,618 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,621 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,624 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,627 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,631 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,633 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,637 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,639 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,643 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,645 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,648 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,651 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,655 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,659 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,661 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,663 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,667 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,669 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,672 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,675 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,678 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,681 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,684 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,686 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,689 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,693 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,696 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,699 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,716 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,718 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,722 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,729 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,732 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,734 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,739 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,742 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,744 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,747 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,750 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,753 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,756 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,761 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,764 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,766 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,769 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,771 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,776 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,778 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,781 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,783 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,786 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,788 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,791 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,793 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,796 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,798 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,802 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,804 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,809 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,812 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,814 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,817 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,819 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,823 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,825 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,828 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,830 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,834 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,836 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,858 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,874 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,877 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,880 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,887 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,890 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,894 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,896 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,899 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,902 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,904 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,908 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,911 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,913 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,915 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,918 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,920 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,922 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,925 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,928 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,931 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,935 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,937 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,941 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,944 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,947 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,949 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,952 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,954 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,957 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,960 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,964 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,966 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,970 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,972 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,975 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,977 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,980 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,982 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,985 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,987 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,990 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,992 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,996 - __main__ - INFO - Found similar record
2025-04-16 03:38:11,999 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,002 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,004 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,006 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,008 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,011 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,013 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,016 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,018 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,022 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,025 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,028 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,030 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,033 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,035 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,038 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,040 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,044 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,051 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,053 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,055 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,058 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,062 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,065 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,068 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,070 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,073 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,075 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,078 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,080 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,083 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,085 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,089 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,092 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,094 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,096 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,098 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,102 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,103 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,107 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,109 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,111 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,114 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,117 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,119 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,122 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,124 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,126 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,129 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,131 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,135 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,137 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,140 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,142 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,145 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,147 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,149 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,151 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,153 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,156 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,158 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,162 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,165 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,167 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,170 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,174 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,177 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,180 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,183 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,186 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,188 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,191 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,194 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,198 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,201 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,205 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,208 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,212 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,215 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,218 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,220 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,223 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,225 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,228 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,230 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,233 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,235 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,239 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,242 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,244 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,246 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,250 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,253 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,256 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,262 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,264 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,267 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,270 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,272 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,276 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,278 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,281 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,283 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,286 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,289 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,293 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,295 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,298 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,300 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,303 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,306 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,310 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,313 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,315 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,319 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,321 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,358 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,361 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,370 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,374 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,376 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,379 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,382 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,385 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,387 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,391 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,394 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,396 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,398 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,400 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,403 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,405 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,408 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,411 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,415 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,417 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,420 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,422 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,426 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,428 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,431 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,433 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,436 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,438 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,441 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,443 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,446 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,449 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,452 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,455 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,459 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,461 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,464 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,466 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,470 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,472 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,476 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,478 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,481 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,484 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,487 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,489 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,492 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,495 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,498 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,500 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,503 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,505 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,509 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,512 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,514 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,516 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,518 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,521 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,524 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,526 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,528 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,531 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,533 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,537 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,545 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,556 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,562 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,566 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,570 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,573 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,576 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,578 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,581 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,582 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,584 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,587 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,589 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,591 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,594 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,596 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,599 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,602 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,604 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,606 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,608 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,611 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,615 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,617 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,620 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,622 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,625 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,628 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,630 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,632 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,635 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,637 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,641 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,643 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,646 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,648 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,650 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,652 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,654 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,657 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,659 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,662 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,664 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,667 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,669 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,671 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,674 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,676 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,680 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,682 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,686 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,688 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,692 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,694 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,697 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,699 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,703 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,705 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,709 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,711 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,713 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,715 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,718 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,721 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,723 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,726 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,729 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,732 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,734 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,738 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,741 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,743 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,746 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,749 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,751 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,753 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,756 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,759 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,761 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,765 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,768 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,772 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,775 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,778 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,780 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,785 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,787 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,792 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,794 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,796 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,798 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,801 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,803 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,806 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,808 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,811 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,813 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,816 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,818 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,820 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,822 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,825 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,828 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,830 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,834 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,836 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,840 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,843 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,845 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,847 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,850 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,852 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,853 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,856 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,859 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,863 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,865 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,868 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,870 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,874 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,876 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,879 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,881 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,885 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,887 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,891 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,894 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,897 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,899 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,902 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,905 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,908 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,911 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,914 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,916 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,919 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,922 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,925 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,927 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,930 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,932 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,935 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,937 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,940 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,943 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,947 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,949 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,952 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,954 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,957 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,960 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,963 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,965 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,967 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,969 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,972 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,975 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,977 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,980 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,982 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,985 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,987 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,990 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,992 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,995 - __main__ - INFO - Found similar record
2025-04-16 03:38:12,997 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,001 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,003 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,006 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,008 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,011 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,014 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,016 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,019 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,021 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,023 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,026 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,062 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,065 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,070 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,075 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,078 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,079 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,082 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,085 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,088 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,091 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,093 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,096 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,099 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,102 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,104 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,107 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,109 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,113 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,115 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,119 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,121 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,124 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,126 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,130 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,133 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,136 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,138 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,141 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,143 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,146 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,149 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,152 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,154 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,157 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,159 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,162 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,164 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,167 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,169 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,172 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,173 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,176 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,178 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,180 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,183 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,186 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,188 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,191 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,194 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,196 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,198 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,201 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,203 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,205 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,207 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,210 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,213 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,215 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,218 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,220 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,223 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,226 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,230 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,232 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,236 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,239 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,242 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,244 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,247 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,249 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,253 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,254 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,258 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,260 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,263 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,265 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,269 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,271 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,274 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,276 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,280 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,283 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,287 - __main__ - INFO - Found similar record
2025-04-16 03:38:13,289 - __main__ - INFO - Found similar record
2025-04-16 03:44:20,867 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:44:20,868 - __main__ - INFO - Processing row 1/1
2025-04-16 03:44:21,609 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:44:38,467 - openai._base_client - INFO - Retrying request to /chat/completions in 0.488610 seconds
2025-04-16 03:44:39,357 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:46:18,802 - __main__ - INFO - API Status Code: 200
2025-04-16 03:46:18,869 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,872 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,879 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,883 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,887 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,892 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,903 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,913 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,917 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,921 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,923 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,934 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,946 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,955 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,959 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,977 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,979 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,987 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,989 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,995 - __main__ - INFO - Found similar record
2025-04-16 03:46:18,997 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,000 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,006 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,020 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,045 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,047 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,052 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,063 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,086 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,092 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,111 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,151 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,202 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,209 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,219 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,230 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,232 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,238 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,243 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,258 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,270 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,284 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,289 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,302 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,329 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,342 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,346 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,362 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,366 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,376 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,382 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,409 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,437 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,444 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,480 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,497 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,502 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,508 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,534 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,537 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,539 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,545 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,558 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,560 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,565 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,606 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,609 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,618 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,621 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,634 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,640 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,642 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,646 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,654 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,664 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,667 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,670 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,674 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,677 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,679 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,702 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,713 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,716 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,721 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,723 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,725 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,728 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,740 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,745 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,749 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,754 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,767 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,770 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,772 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,776 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,778 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,781 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,784 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,787 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,798 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,801 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,805 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,817 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,820 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,822 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,825 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,834 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,848 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,851 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,854 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,856 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,859 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,867 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,870 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,876 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,884 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,900 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,907 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,909 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,914 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,917 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,922 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,926 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,928 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,943 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,963 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,967 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,969 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,974 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,977 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,980 - __main__ - INFO - Found similar record
2025-04-16 03:46:19,994 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,004 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,007 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,009 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,031 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,038 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,040 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,043 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,048 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,051 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,054 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,059 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,061 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,109 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,121 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,135 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,137 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,142 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,145 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,150 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,154 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,157 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,178 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,183 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,188 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,197 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,209 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,213 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,217 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,228 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,230 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,233 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,236 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,238 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,272 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,275 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,279 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,286 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,291 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,294 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,295 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,305 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,308 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,311 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,321 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,327 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,352 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,374 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,379 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,384 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,396 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,405 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,414 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,418 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,421 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,423 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,436 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,439 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,455 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,460 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,463 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,491 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,504 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,516 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,521 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,537 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,540 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,543 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,562 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,569 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,572 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,583 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,586 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,589 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,592 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,595 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,606 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,623 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,631 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,642 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,644 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,647 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,651 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,661 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,670 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,681 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,686 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,692 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,697 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,707 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,710 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,712 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,717 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,720 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,731 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,735 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,741 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,764 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,768 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,802 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,805 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,814 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,829 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,853 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,870 - __main__ - INFO - Found similar record
2025-04-16 03:46:20,878 - __main__ - INFO - Found similar record
2025-04-16 03:50:37,291 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:50:37,292 - __main__ - INFO - Processing row 1/1
2025-04-16 03:50:37,831 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:52:18,143 - __main__ - INFO - API Status Code: 200
2025-04-16 03:52:18,202 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,388 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,558 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,582 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,629 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,649 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,651 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,728 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,731 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,733 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,769 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,792 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,929 - __main__ - INFO - Found similar record
2025-04-16 03:52:18,984 - __main__ - INFO - Found similar record
2025-04-16 03:52:19,016 - __main__ - INFO - Found similar record
2025-04-16 03:52:19,030 - __main__ - INFO - Found similar record
2025-04-16 03:52:19,046 - __main__ - INFO - Found similar record
2025-04-16 03:52:19,253 - __main__ - INFO - Found similar record
2025-04-16 03:52:19,309 - __main__ - INFO - Found similar record
2025-04-16 03:56:20,238 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 03:56:20,240 - __main__ - INFO - Processing row 1/1
2025-04-16 03:56:20,691 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 03:58:00,188 - __main__ - INFO - API Status Code: 200
2025-04-16 03:58:01,340 - __main__ - INFO - Found similar record
2025-04-16 04:06:02,607 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 04:06:02,608 - __main__ - INFO - Processing row 1/1
2025-04-16 04:06:03,324 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:07:43,477 - __main__ - INFO - API Status Code: 200
2025-04-16 04:07:44,818 - __main__ - INFO - No similar records found for row 1
2025-04-16 04:07:44,818 - __main__ - INFO - Pushing the record to Neo4j
2025-04-16 04:07:44,818 - __main__ - ERROR - Error processing CSV single_data.csv: process_batch_file() missing 1 required positional argument: 'driver'
2025-04-16 04:15:43,394 - __main__ - INFO - Processing 1 rows from single_data.csv
2025-04-16 04:15:43,395 - __main__ - INFO - Processing row 1/1
2025-04-16 04:15:43,840 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:17:24,197 - __main__ - INFO - API Status Code: 200
2025-04-16 04:17:25,569 - __main__ - INFO - Found similar record
2025-04-16 04:17:25,799 - __main__ - INFO - Similar records found for row 1: [({'summary': 'Caller reports being in a car at the front of a neighborhood complex, experiencing head pain and shortness of breath.', 'transcript': "0002.0s 0002.5s SPEAKER_01:  Umm\n 0003.3s 0006.7s SPEAKER_01:  I need you to do that for me now. I don't care, Tanya.\n 0006.4s 0010.8s SPEAKER_00:  Okay, I have your number at 740-971-8962, is that correct?\n 0011.1s 0011.5s SPEAKER_01:  Yeah.\n 0011.9s 0013.0s SPEAKER_00:  Okay, and what's your name?\n 0013.6s 0015.8s SPEAKER_01:  All in!\n 0014.6s 0014.9s SPEAKER_00:  KARGER!\n 0017.0s 0019.3s SPEAKER_00:  And you said, how old are you?\n 0018.6s 0020.5s SPEAKER_01:  how are you going to go to the car\n 0023.1s 0023.7s SPEAKER_00:  Howdy\n 0023.1s 0024.0s SPEAKER_01:  How are you, Kevin?\n 0024.4s 0025.0s SPEAKER_00:  27.\n 0025.6s 0025.9s SPEAKER_01:  K\n 0026.2s 0027.6s SPEAKER_00:  Are you still outside in the car?\n 0028.2s 0029.5s SPEAKER_01:  No, I didn't leave yet.\n 0030.2s 0036.2s SPEAKER_00:  Okay, yeah, we actually have medics coming to see you there at 317 Chelsea Street, Department D, okay? So you don't have to go anywhere.\n 0039.7s 0041.8s SPEAKER_00:  Okay, I'm just going to ask you a few more questions.\n 0042.8s 0045.0s SPEAKER_00:  Do you have any history of heart problems?\n 0047.5s 0047.9s SPEAKER_01:  No.\n 0049.7s 0052.1s SPEAKER_00:  And where is the painting or chef located at?\n 0053.4s 0054.3s SPEAKER_01:  The mark starts.\n 0055.1s 0056.5s SPEAKER_00:  Like, is it right, left, middle?\n 0059.7s 0060.2s SPEAKER_01:  in the middle.\n 0062.3s 0064.4s SPEAKER_00:  And was it sudden or gradual when it started?\n 0067.2s 0068.5s SPEAKER_01:  Um, kinda.\n 0070.9s 0072.8s SPEAKER_00:  Was it like all at once or gradually?\n 0073.6s 0074.4s SPEAKER_01: ty ANYBO fades\n 0075.6s 0076.4s SPEAKER_01:  Gradually.\n 0079.4s 0080.1s SPEAKER_01:  It's very normal.\n 0080.7s 0082.8s SPEAKER_01:  Okay.\n 0083.9s 0086.8s SPEAKER_01:  I got my hat, this is the front of the neighborhood.\n 0089.4s 0091.4s SPEAKER_00:  You have your hazards at the front of the neighborhood?\n 0092.0s 0093.4s SPEAKER_01:  Yeah, it's my fault.\n 0094.9s 0098.9s SPEAKER_00:  I thought you were at 317 Chelsea Street, Apartment D, inside of Apartment D.\n 0102.6s 0103.7s SPEAKER_01:  Now I'm in a car.\n 0104.5s 0108.7s SPEAKER_00:  Okay, so are you parked in front of the complex now? I want to do it. Come on.\n 0109.7s 0111.2s SPEAKER_01:  Yes. Okay.\n 0114.3s 0115.3s SPEAKER_01:  been hurry up.\n 0114.5s 0114.8s SPEAKER_00:  How are you\n 0116.0s 0121.1s SPEAKER_00:  Yeah, they marked in route to you. I'm putting on here that you're at the front of the complex in your car. What kind of vehicle are you in?\n 0121.3s 0122.5s SPEAKER_01:  in the state\n 0123.1s 0125.5s SPEAKER_00:  Is it two door or four door?\n 0127.0s 0129.9s SPEAKER_01:  It's for us. What's the fun?\n 0132.8s 0134.0s SPEAKER_00:  How many doors?\n 0134.7s 0135.2s SPEAKER_01:  Fordar.\n 0134.7s 0135.2s SPEAKER_01:  Fordar.\n 0136.6s 0137.3s SPEAKER_00:  What year is it?\n 0137.9s 0138.6s SPEAKER_01:  All seven.\n 0139.6s 0140.0s SPEAKER_01:  Oh, yeah.\n 0142.6s 0144.2s SPEAKER_00:  And are you feeling pain anywhere else?\n 0145.6s 0146.3s SPEAKER_01:  My head.\n 0148.1s 0149.1s SPEAKER_00:  Are you short of breath at all?\n 0151.2s 0151.7s SPEAKER_01:  Yes.\n 0152.7s 0154.5s SPEAKER_00:  And does that change when you breathe or move?\n 0152.7s 0154.5s SPEAKER_00:  And does that change when you breathe or move?\n 0158.7s 0159.2s SPEAKER_01:  Thank you.\n 0160.3s 0162.3s SPEAKER_00:  He said the pain does change when you breathe or move.\n 0164.7s 0165.0s SPEAKER_01:  Yeah.\n 0167.2s 0169.1s SPEAKER_00:  Are you not dated or have you vomited?\n 0170.9s 0172.9s SPEAKER_01:  Now, with our community.\n 0173.5s 0174.4s SPEAKER_01:  Oh my god.\n 0175.5s 0177.0s SPEAKER_01:  I bet the police is out of here.\n 0177.6s 0180.9s SPEAKER_00:  Okay. All right. I'll go ahead and disconnect with you if you can make contact with them.\n 0177.6s 0180.9s SPEAKER_00:  Okay. All right. I'll go ahead and disconnect with you if you can make contact with them.\n 0182.4s 0183.4s SPEAKER_01:  Bye.", 'metadata': {'Unnamed: 0.1': '0', 'id': '6903070000000000.0', 'nature': 'Chest Pain', 'incidentno': '28', 'start': '1/1/2021 1:08', 'address': '317 CHELSEA ST DELAWARE', 'created_at': '2/25/2022 15:14', 'updated_at': '2/25/2022 15:14', 'month': '1', 'clean_address_EMS': '317 Chelsea St Delaware OH 43015 USA', 'latitude_EMS': '40.2891681', 'longitude_EMS': '-83.0726921', 'address_reverse_EMS': '317 Chelsea St, Delaware, OH 43015, USA', 'Date_EMS': '1/1/2021 0:00', 'Unnamed: 0': '38', 'fileName': '2021-01-01/4/CH4_03004448_51.txt', 'AddressFinal': '317 Chelsea Street', 'AddressExtracted': '317 Chelsea Street Department D okay ty ANYBO fades 317 Chelsea Street Apartment D inside', 'clean_address_extracted': '317 Chelsea St Delaware OH 43015 USA', 'Date_target': '1/1/2021 0:00'}, 'date': '1/1/2021 0:00', 'address': '317 Chelsea St Delaware OH 43015 USA'}, (True, 1.0, True, 1.0, np.float64(1.0000000000000007), 0.7391304347826086, np.float64(0.7924040597102252)))]
2025-04-16 04:28:02,909 - __main__ - INFO - Processing 13 rows from single_data.csv
2025-04-16 04:28:02,912 - __main__ - INFO - Processing row 1/13
2025-04-16 04:28:03,405 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:28:54,932 - __main__ - INFO - Processing 13 rows from single_data.csv
2025-04-16 04:28:54,933 - __main__ - INFO - Processing row 1/13
2025-04-16 04:28:55,385 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:30:34,239 - __main__ - INFO - API Status Code: 200
2025-04-16 04:30:35,584 - __main__ - INFO - No similar records found for row 1
2025-04-16 04:30:35,584 - __main__ - INFO - Pushing the record to Neo4j
2025-04-16 04:30:36,565 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 10, column: 12, offset: 215} for query: '\n    CREATE (i:Incident {\n        summary: $summary,\n        timestamp: $timestamp,\n        nature: $nature,\n        severity: $severity,\n        hazards: $hazards,\n        transcript: $transcript\n    })\n    RETURN id(i) AS incident_id\n    '
2025-04-16 04:30:36,667 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 6, column: 16, offset: 117} for query: '\n        CREATE (c:Call {\n            summary: $summary,\n            timestamp: $timestamp\n        })\n        RETURN id(c) AS call_id\n        '
2025-04-16 04:30:36,957 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 52} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:36,958 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:36,958 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:37,042 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 8, column: 12, offset: 141} for query: '\n    CREATE (l:Location {\n        address: $address,\n        type: $type,\n        features: $features,\n        time: $time\n    })\n    RETURN id(l) AS location_id\n    '
2025-04-16 04:30:37,159 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 11, offset: 48} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:37,159 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:37,160 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (l))} {position: line: 2, column: 5, offset: 5} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:37,233 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:30:37,345 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:37,345 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:37,345 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:37,431 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:30:37,623 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:37,623 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:37,623 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:37,728 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 19, offset: 58} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:37,728 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 42, offset: 81} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:37,728 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (c))} {position: line: 2, column: 13, offset: 13} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:37,828 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 42} for query: '\n        MATCH (i:Incident)\n        WHERE id(i) = $incident_id\n        SET i.metadata = $metadata\n        '
2025-04-16 04:30:38,097 - __main__ - INFO - Processing row 2/13
2025-04-16 04:30:38,540 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:30:51,183 - __main__ - INFO - API Status Code: 200
2025-04-16 04:30:52,289 - __main__ - INFO - No similar records found for row 2
2025-04-16 04:30:52,289 - __main__ - INFO - Pushing the record to Neo4j
2025-04-16 04:30:53,007 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 10, column: 12, offset: 215} for query: '\n    CREATE (i:Incident {\n        summary: $summary,\n        timestamp: $timestamp,\n        nature: $nature,\n        severity: $severity,\n        hazards: $hazards,\n        transcript: $transcript\n    })\n    RETURN id(i) AS incident_id\n    '
2025-04-16 04:30:53,084 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 6, column: 16, offset: 117} for query: '\n        CREATE (c:Call {\n            summary: $summary,\n            timestamp: $timestamp\n        })\n        RETURN id(c) AS call_id\n        '
2025-04-16 04:30:53,184 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 52} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:53,184 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:53,184 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:53,256 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 8, column: 12, offset: 141} for query: '\n    CREATE (l:Location {\n        address: $address,\n        type: $type,\n        features: $features,\n        time: $time\n    })\n    RETURN id(l) AS location_id\n    '
2025-04-16 04:30:53,353 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 11, offset: 48} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:53,353 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:53,353 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (l))} {position: line: 2, column: 5, offset: 5} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:53,444 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:30:53,561 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:53,562 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:53,562 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:53,638 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:30:53,704 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:53,704 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:53,704 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:53,800 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 19, offset: 58} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:53,800 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 42, offset: 81} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:53,800 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (c))} {position: line: 2, column: 13, offset: 13} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:53,882 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 42} for query: '\n        MATCH (i:Incident)\n        WHERE id(i) = $incident_id\n        SET i.metadata = $metadata\n        '
2025-04-16 04:30:54,172 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 10, column: 12, offset: 215} for query: '\n    CREATE (i:Incident {\n        summary: $summary,\n        timestamp: $timestamp,\n        nature: $nature,\n        severity: $severity,\n        hazards: $hazards,\n        transcript: $transcript\n    })\n    RETURN id(i) AS incident_id\n    '
2025-04-16 04:30:54,244 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 6, column: 16, offset: 117} for query: '\n        CREATE (c:Call {\n            summary: $summary,\n            timestamp: $timestamp\n        })\n        RETURN id(c) AS call_id\n        '
2025-04-16 04:30:54,344 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 52} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:54,344 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:54,344 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:30:54,421 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 8, column: 12, offset: 141} for query: '\n    CREATE (l:Location {\n        address: $address,\n        type: $type,\n        features: $features,\n        time: $time\n    })\n    RETURN id(l) AS location_id\n    '
2025-04-16 04:30:54,530 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 11, offset: 48} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:54,531 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:54,531 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (l))} {position: line: 2, column: 5, offset: 5} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:30:54,601 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:30:54,656 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:54,657 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:54,657 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:30:54,735 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 19, offset: 58} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:54,736 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 42, offset: 81} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:54,736 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (c))} {position: line: 2, column: 13, offset: 13} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:30:54,810 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 42} for query: '\n        MATCH (i:Incident)\n        WHERE id(i) = $incident_id\n        SET i.metadata = $metadata\n        '
2025-04-16 04:30:54,964 - __main__ - INFO - Processing row 3/13
2025-04-16 04:30:55,342 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:31:08,599 - __main__ - INFO - API Status Code: 200
2025-04-16 04:31:08,623 - __main__ - ERROR - Error processing CSV single_data.csv: expected string or bytes-like object, got 'float'
2025-04-16 04:37:23,749 - __main__ - INFO - Processing 13 rows from single_data.csv
2025-04-16 04:37:23,751 - __main__ - INFO - Processing row 1/13
2025-04-16 04:37:24,601 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:39:03,786 - __main__ - INFO - API Status Code: 200
2025-04-16 04:39:04,928 - __main__ - INFO - Found similar record
2025-04-16 04:39:05,125 - __main__ - INFO - Similar records found for row 1
2025-04-16 04:39:05,126 - __main__ - INFO - Processing row 2/13
2025-04-16 04:39:05,581 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:39:17,942 - __main__ - INFO - API Status Code: 200
2025-04-16 04:39:19,039 - __main__ - INFO - No similar records found for row 2
2025-04-16 04:39:19,039 - __main__ - INFO - Pushing the record to Neo4j
2025-04-16 04:39:19,952 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 10, column: 12, offset: 215} for query: '\n    CREATE (i:Incident {\n        summary: $summary,\n        timestamp: $timestamp,\n        nature: $nature,\n        severity: $severity,\n        hazards: $hazards,\n        transcript: $transcript\n    })\n    RETURN id(i) AS incident_id\n    '
2025-04-16 04:39:20,045 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 6, column: 16, offset: 117} for query: '\n        CREATE (c:Call {\n            summary: $summary,\n            timestamp: $timestamp\n        })\n        RETURN id(c) AS call_id\n        '
2025-04-16 04:39:20,184 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 52} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:39:20,184 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:39:20,184 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:39:20,269 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 8, column: 12, offset: 141} for query: '\n    CREATE (l:Location {\n        address: $address,\n        type: $type,\n        features: $features,\n        time: $time\n    })\n    RETURN id(l) AS location_id\n    '
2025-04-16 04:39:20,393 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 11, offset: 48} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:39:20,393 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:39:20,393 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (l))} {position: line: 2, column: 5, offset: 5} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:39:20,493 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:39:20,565 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:20,565 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:20,565 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:20,650 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:39:20,714 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:20,714 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:20,714 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:20,819 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 19, offset: 58} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:39:20,820 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 42, offset: 81} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:39:20,820 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (c))} {position: line: 2, column: 13, offset: 13} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:39:20,920 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 42} for query: '\n        MATCH (i:Incident)\n        WHERE id(i) = $incident_id\n        SET i.metadata = $metadata\n        '
2025-04-16 04:39:21,249 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 10, column: 12, offset: 215} for query: '\n    CREATE (i:Incident {\n        summary: $summary,\n        timestamp: $timestamp,\n        nature: $nature,\n        severity: $severity,\n        hazards: $hazards,\n        transcript: $transcript\n    })\n    RETURN id(i) AS incident_id\n    '
2025-04-16 04:39:21,330 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 6, column: 16, offset: 117} for query: '\n        CREATE (c:Call {\n            summary: $summary,\n            timestamp: $timestamp\n        })\n        RETURN id(c) AS call_id\n        '
2025-04-16 04:39:21,438 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 52} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:39:21,438 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:39:21,438 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (c:Call), (i:Incident)\n        WHERE id(c) = $call_id AND id(i) = $incident_id\n        CREATE (c)-[:ABOUT]->(i)\n        '
2025-04-16 04:39:21,522 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 8, column: 12, offset: 141} for query: '\n    CREATE (l:Location {\n        address: $address,\n        type: $type,\n        features: $features,\n        time: $time\n    })\n    RETURN id(l) AS location_id\n    '
2025-04-16 04:39:21,625 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 11, offset: 48} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:39:21,626 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 36, offset: 73} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:39:21,626 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (l))} {position: line: 2, column: 5, offset: 5} for query: '\n    MATCH (i:Incident), (l:Location)\n    WHERE id(i) = $incident_id AND id(l) = $location_id\n    CREATE (i)-[:AT]->(l)\n    '
2025-04-16 04:39:21,709 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 11, column: 16, offset: 254} for query: '\n        CREATE (p:Person {\n            name: $name,\n            phone: $phone,\n            role: $role,\n            relationship: $relationship,\n            conditions: $conditions,\n            age: $age,\n            sex: $sex\n        })\n        RETURN id(p) AS person_id\n        '
2025-04-16 04:39:21,771 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 54} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:21,771 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 38, offset: 77} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:21,771 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (i))} {position: line: 2, column: 9, offset: 9} for query: '\n        MATCH (p:Person), (i:Incident)\n        WHERE id(p) = $person_id AND id(i) = $incident_id\n        CREATE (p)-[:INVOLVED_IN]->(i)\n        '
2025-04-16 04:39:21,875 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 19, offset: 58} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:39:21,875 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 42, offset: 81} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:39:21,875 - neo4j.notifications - INFO - Received notification from DBMS server: {severity: INFORMATION} {code: Neo.ClientNotification.Statement.CartesianProduct} {category: PERFORMANCE} {title: This query builds a cartesian product between disconnected patterns.} {description: If a part of a query contains multiple disconnected patterns, this will build a cartesian product between all those parts. This may produce a large amount of data and slow down query processing. While occasionally intended, it may often be possible to reformulate the query that avoids the use of this cross product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH (identifier is: (c))} {position: line: 2, column: 13, offset: 13} for query: '\n            MATCH (p:Person), (c:Call)\n            WHERE id(p) = $person_id AND id(c) = $call_id\n            CREATE (p)-[:MADE]->(c)\n            '
2025-04-16 04:39:21,943 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.FeatureDeprecationWarning} {category: DEPRECATION} {title: This feature is deprecated and will be removed in future versions.} {description: The query used a deprecated function: `id`.} {position: line: 3, column: 15, offset: 42} for query: '\n        MATCH (i:Incident)\n        WHERE id(i) = $incident_id\n        SET i.metadata = $metadata\n        '
2025-04-16 04:39:22,121 - __main__ - INFO - Processing row 3/13
2025-04-16 04:39:22,541 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:39:35,193 - __main__ - INFO - API Status Code: 200
2025-04-16 04:39:35,214 - __main__ - ERROR - Error processing CSV single_data.csv: expected string or bytes-like object, got 'float'
2025-04-16 04:39:53,913 - __main__ - INFO - Processing 13 rows from single_data.csv
2025-04-16 04:39:53,913 - __main__ - INFO - Processing row 1/13
2025-04-16 04:39:54,391 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:41:34,051 - __main__ - INFO - API Status Code: 200
2025-04-16 04:41:35,389 - __main__ - INFO - No similar records found for row 1
2025-04-16 04:41:35,389 - __main__ - INFO - Pushing the record to Neo4j
2025-04-16 04:41:35,390 - __main__ - INFO - Processing row 2/13
2025-04-16 04:41:35,971 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:41:47,834 - __main__ - INFO - API Status Code: 200
2025-04-16 04:41:48,927 - __main__ - INFO - No similar records found for row 2
2025-04-16 04:41:48,927 - __main__ - INFO - Pushing the record to Neo4j
2025-04-16 04:41:48,928 - __main__ - INFO - Processing row 3/13
2025-04-16 04:41:49,327 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-16 04:42:01,852 - __main__ - INFO - API Status Code: 200
2025-04-16 04:42:01,872 - __main__ - ERROR - Error processing CSV single_data.csv: expected string or bytes-like object, got 'float'
